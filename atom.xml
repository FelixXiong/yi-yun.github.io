<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>斯是陋室，惟吾德馨</title>
  
  <subtitle>念念不忘，必有回响</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yi-yun.github.io/"/>
  <updated>2018-10-20T14:16:06.345Z</updated>
  <id>https://yi-yun.github.io/</id>
  
  <author>
    <name>Yi-Yun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git 使用</title>
    <link href="https://yi-yun.github.io/Git%E4%BD%BF%E7%94%A8/"/>
    <id>https://yi-yun.github.io/Git使用/</id>
    <published>2018-10-20T13:44:00.000Z</published>
    <updated>2018-10-20T14:16:06.345Z</updated>
    
    <content type="html"><![CDATA[<p align="center"><br>    <img src="https://yiyun-1253940215.cos.ap-shanghai.myqcloud.com/20181020203310.png" class="full-class"><br></p><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>主要是简单的 Git 命令介绍，初衷是看完这篇文章能直接上手在 GitHub 上 <code>New pull request</code> 进行项目开发</p><a id="more"></a><h2 id="多平台初始化"><a href="#多平台初始化" class="headerlink" title="多平台初始化"></a>多平台初始化</h2><p><strong>极其重要，不然 merge 时代码会很乱</strong></p><ol><li><p>编辑器改成（UX）模式</p><ul><li>换行符采用 LF</li><li>UTF-8 编码</li></ul></li><li><p>Git 命令行配置</p><ul><li><code>git config --global core.safecrlf true</code></li><li><code>git config --global core.autocrlf false</code>  </li></ul></li></ol><p>原因见<a href="https://github.com/cssmagic/blog/issues/22" target="_blank" rel="noopener">链接</a></p><h2 id="多人协作"><a href="#多人协作" class="headerlink" title="多人协作"></a>多人协作</h2><p>本文采用的是 pull request 的方式，因为这样可以进行 code review</p><ol><li><p>Fork 源仓库<br>点击 <code>Fork</code> 按钮将项目复制到自己的仓库</p></li><li><p>拉取本地仓库<br>用 <code>git clone 项目地址</code> 到自己电脑上，嫌慢的朋友见<a href="#设置代理">这里</a></p></li><li><p>开发<br>你可以在 master 分支上开发，也可以再新建一个 dev 分支（看项目大小以及简易程度）<br>开发完以后，<code>git add . &amp;&amp; git commit -m &#39;注释&#39; &amp;&amp; git push</code></p></li><li><p>创建合并请求<br>打开网页进入 Fork 的项目，然后点击 <code>New pull request</code>，最后点击 <code>Create pull request</code> 按钮，添加一段注释，源仓库的管理员就能收到你的请求<br><img src="https://yiyun-1253940215.cos.ap-shanghai.myqcloud.com/20181020212913.png" alt=""></p></li><li><p>同步<br>如果过了一礼拜作者或其他人员对仓库的代码进行了修改，源代码变了，你本地的代码还是前几天的。<br>这时候你需要使用 Git 命令 <code>git fetch 源仓库地址 master:分支名</code> （分支名自己取，不建议直接拉取到主分支），然后 <code>git merge 分支名</code> 即可同步代码（有冲突就处理冲突）</p></li></ol><h2 id="一些小技巧"><a href="#一些小技巧" class="headerlink" title="一些小技巧"></a>一些小技巧</h2><h3 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h3><p>GayHub 被墙的厉害，这步以及下步没有代理的忽略</p><p><code>git config --global http.proxy &#39;socks5://127.0.0.1:1080&#39;</code><br><code>git config --global https.proxy &#39;socks5://127.0.0.1:1080&#39;</code></p><p>因为访问 GitHub 走的代理，用 https 连接的主机提交会有点问题，可以使用 ssh 链接提交。更改主机连接方法点<a href="#更改远程仓库指向-remote-url">这里</a></p><h3 id="取消代理"><a href="#取消代理" class="headerlink" title="取消代理"></a>取消代理</h3><p><code>git config --global --unset http.proxy</code></p><p><code>git config --global --unset https.proxy</code></p><h3 id="更改远程仓库指向-remote-url"><a href="#更改远程仓库指向-remote-url" class="headerlink" title="更改远程仓库指向 remote url"></a>更改远程仓库指向 remote url</h3><ul><li><code>git remote set-url origin yoururl</code></li><li><code>git config -e</code>  熟悉 vim 的朋友可以使用，最后记得保存（个人喜欢这种方式）</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p align=&quot;center&quot;&gt;&lt;br&gt;    &lt;img src=&quot;https://yiyun-1253940215.cos.ap-shanghai.myqcloud.com/20181020203310.png&quot; class=&quot;full-class&quot;&gt;&lt;br&gt;&lt;/p&gt;


&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;主要是简单的 Git 命令介绍，初衷是看完这篇文章能直接上手在 GitHub 上 &lt;code&gt;New pull request&lt;/code&gt; 进行项目开发&lt;/p&gt;
    
    </summary>
    
      <category term="代码协作" scheme="https://yi-yun.github.io/categories/%E4%BB%A3%E7%A0%81%E5%8D%8F%E4%BD%9C/"/>
    
    
      <category term="博客" scheme="https://yi-yun.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Git" scheme="https://yi-yun.github.io/tags/Git/"/>
    
      <category term="奇淫怪技" scheme="https://yi-yun.github.io/tags/%E5%A5%87%E6%B7%AB%E6%80%AA%E6%8A%80/"/>
    
      <category term="配置笔记" scheme="https://yi-yun.github.io/tags/%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/"/>
    
      <category term="软件" scheme="https://yi-yun.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>可能是最佳的免费图床</title>
    <link href="https://yi-yun.github.io/%E5%9B%BE%E5%BA%8A%E7%9A%84%E9%80%89%E6%8B%A9/"/>
    <id>https://yi-yun.github.io/图床的选择/</id>
    <published>2018-10-11T05:15:48.000Z</published>
    <updated>2018-10-15T10:07:05.303Z</updated>
    
    <content type="html"><![CDATA[<p></p><p align="center"><br>  <img src="https://yiyun-1253940215.cos.ap-shanghai.myqcloud.com/TIM图片20180915163013.gif" alt="IMG_5686.jpg" title="IMG_5686.jpg" width="250"><br></p><br>这张图仔细看，老司机可能深有体会<p></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>网络相册，或叫在线相册，为运行、储存以及翻阅、分享于網際網路的相簿，由于在线相册不是实质 … 相册会给免费用户提供较少的月流量，成为付费用户之后，可外链流量将获得提升；也有网站专门提供免费外链服务（此类网站又称<em>图床</em>），不限流量。        –维基百科</p></blockquote><a id="more"></a><p>换句话讲，图床是一种专门存储图片的地方，分享以链接的形式，应用于诸多场景，尤其是应用于博客图片的插入<del>（可能我只有写博客的时候才用到图床）</del>。不说100%，99% 写博客的人，都需要一个图床（稳不稳定另说），总不至于把图片放在站点的 <code>src/image</code> 目录下吧</p><h2 id="图床平台"><a href="#图床平台" class="headerlink" title="图床平台"></a>图床平台</h2><p>目前主要分为两种</p><ul><li><p>公共图床</p><ul><li><a href="https://sm.ms/" target="_blank" rel="noopener">SM.MS</a><br>其实还不错，但公共的图床还是不舒服</li><li><a href="http://picupload.service.weibo.com/interface/" target="_blank" rel="noopener">微博图床</a><br>说实话也还行，不过速度优化可能差点。</li></ul><p>公共图床都有致命的缺点用的人多。哪天跑路了，你博客文章没图片显示都没地方哭去···</p></li><li><p>自建图床</p><ul><li>VPS<br>自搭麻烦，并且采用这种方案意味着你不能重装 VPS 的系统…</li><li>七牛云<br>需要实名认证，七牛图片分享链接的 ssl 按流量计费</li><li>又拍云<br>也要实名认证，计费方式与七牛云相似，但可以通过加入又拍联盟可以拥有免费流量和容量<br>听起来还不错吧，但是实名认证太坑了。需要手持身份证正面和手持身份证反面，注意是手持身份证反面！不是单纯的身份证反面！反正我没拍照上传的习惯···加上支付宝芝麻信用没过700，所以放弃了</li></ul><p>综上，如果付费的话，七牛云挺好的且不贵。但不是不想当金钱的奴隶嘛，所以才有了此文</p></li></ul><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>既不想做金钱的奴隶，又想有高质量的服务怎么办呢？所以就有了相应的需求</p><ul><li>一定的免费空间以及流量</li><li>支持 SSL</li><li>访问速度</li></ul><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>说实话，我当初找得快放弃了，仔细一想七牛云也不错而且便宜，何必要死心眼找免费的呢</p><ul><li><p><a href="https://cloud.tencent.com/product/cos" target="_blank" rel="noopener">腾讯云对象存储</a></p><p>只需绑定银行卡的 QQ 或者微信实名认证就可得到免费额度</p><p><img src="https://yiyun-1253940215.cos.ap-shanghai.myqcloud.com/20181011125507.png" alt=""></p><ul><li>文档丰富<br>我还用 Python SDK 在 iOS 上写了图片上传的<a href="https://github.com/yi-yun/PicgoScript" target="_blank" rel="noopener">脚本</a>呢</li><li>官网称，提供全球400+节点加速，支持SSL，支持防盗链，支持API调用<br>之前在没找到好用的图床之前用的 <a href="https://sm.ms/" target="_blank" rel="noopener">SM.MS</a>，用了腾讯云之后图片显示速度明显提升了<del>（没有具体数据，可能心理作用？）</del></li></ul></li></ul><p>  再来吹一下腾讯云对象存储<del>（暗示腾讯云给广告费）</del>，对象存储不光能用在图床，传小型的视频也是极佳的选择，可以在博客里显示</p><h3 id="图床上传工具"><a href="#图床上传工具" class="headerlink" title="图床上传工具"></a>图床上传工具</h3><ul><li><a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a><br>在 GitHub 上的开源神器，全平台（Mac/Windows/Linux），使用 <a href="https://github.com/Molunerfinn/PicGo/wiki" target="_blank" rel="noopener">Wiki</a> 丰富，上手简单，成功被圈粉</li><li><a href="https://itunes.apple.com/cn/app/id1101244278?ls=1&amp;mt=12" target="_blank" rel="noopener">iPic</a><br>很多人推荐，但恕我买不起 Mac···</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>能用钱解决的事情真的不要花费时间去寻找免费的事，这次算是成功了，但下次呢？为了找好用免费的图床，时间浪费了起码有两三天。这也是文章开头图片的意义所在···</p><p><strong>参考文章</strong><br><a href="https://sspai.com/post/40499" target="_blank" rel="noopener">嗯，图片就交给它了</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;br&gt;  &lt;img src=&quot;https://yiyun-1253940215.cos.ap-shanghai.myqcloud.com/TIM图片20180915163013.gif&quot; alt=&quot;IMG_5686.jpg&quot; title=&quot;IMG_5686.jpg&quot; width=&quot;250&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;这张图仔细看，老司机可能深有体会&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;网络相册，或叫在线相册，为运行、储存以及翻阅、分享于網際網路的相簿，由于在线相册不是实质 … 相册会给免费用户提供较少的月流量，成为付费用户之后，可外链流量将获得提升；也有网站专门提供免费外链服务（此类网站又称&lt;em&gt;图床&lt;/em&gt;），不限流量。        –维基百科&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="https://yi-yun.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="图床" scheme="https://yi-yun.github.io/tags/%E5%9B%BE%E5%BA%8A/"/>
    
      <category term="博客" scheme="https://yi-yun.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="对象存储" scheme="https://yi-yun.github.io/tags/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/"/>
    
      <category term="工具推荐" scheme="https://yi-yun.github.io/tags/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>win10 软件推荐（附下载链接）</title>
    <link href="https://yi-yun.github.io/win10%E9%85%8D%E7%BD%AE/"/>
    <id>https://yi-yun.github.io/win10配置/</id>
    <published>2018-10-09T14:24:08.000Z</published>
    <updated>2018-10-19T06:22:44.396Z</updated>
    
    <content type="html"><![CDATA[<p align="center"><br><img src="https://yiyun-1253940215.cos.ap-shanghai.myqcloud.com/background-720224__340.jpg" class="full-image"><br></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>重装系统过的朋友肯定很头疼要安装哪些软件？很多都是之前网上找的，并没有保存安装包，导致后续有很多麻烦。</p><p>本篇文章主要为了解决这个问题，当然里面的软件也只是符合博主的个人口味，按需获取。</p><p><strong>系统兼容性说明：博主大概率以后重装 win10 1803 专业版起步，有些软件兼容性不是很好，请自行在属性兼容性进行测试！</strong></p><a id="more"></a><h2 id="驱动安装"><a href="#驱动安装" class="headerlink" title="驱动安装"></a>驱动安装</h2><p>很多人仍使用的是 PE 包中的万能驱动，所谓万能并不是真正的“万能”，某些驱动在某品牌某型号电脑里不生效，偶尔还会蓝屏！当然那是属于驱动特别倒霉类型的！一般图省事，打万能驱动就完事了。</p><p>我还是比较推荐以下两款第三方驱动</p><ul><li><p>驱动精灵<br>虽然官网上下的软件有点流氓，具有开机占用 CPU、默默更新等一系列症状，但某大佬封装的去广告绿色版还是不错的</p></li><li><p><a href="http://www.160.com/" target="_blank" rel="noopener">驱动人生</a><br>老版本还行，新版本没用过，经常是我其他驱动打崩后的首选，表现还不错！</p></li></ul><h3 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h3><ul><li>问：win10 新版本不是会自动更新驱动么？为什么还要装驱动？<br>答：没错，但博主曾经重装 1803 后，没有打驱动让其自动更新，导致触摸板驱动对于键盘上的按键没反应。重新安装也没有效果，结果一直到现在也没有解决。so,还是看脸···</li></ul><h2 id="office-与-win-激活"><a href="#office-与-win-激活" class="headerlink" title="office 与 win 激活"></a>office 与 win 激活</h2><p>理论上这个步骤应该在驱动安装完重启之后，因为驱动容易崩。</p><h3 id="office"><a href="#office" class="headerlink" title="office"></a>office</h3><p>个人比较喜欢 Office 2016 Professional Plus（名字看上去就跟别人不一样）。</p><p>既然装了就选高端点的版本,其实是版本少见，导致激活工具也难找。</p><h3 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h3><p>很多激活工具说白了都是服务器，自己也可以搭，但有 180 天限制。<br>但博主并不担心，因为我这台老电脑 win7 升 win10 已经绑定 oem 了，重装也不需要激活系统，只要激活 office 就行了.</p><ul><li><p>神龙 kms<br>运行前下载最新版并关掉杀软，会报毒，能激活 win 和 office，有广告，传言就三行代码，但无伤大雅且易一发入魂。不过好像也有激活时间限制，看脸。</p></li><li><p><a href="https://github.com/TGSAN/CMWTAT_Digital_Edition" target="_blank" rel="noopener">数字权利激活</a><br>链接是 GitHub 地址，对没错是开源的！不知道会不会被微软关掉。<br>只能激活 win10 系统，前阵子才出的没用过，一直想抽空找虚拟机试试···</p></li></ul><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p>彩蛋：先安装<a href="#佛曰不可说">这个</a></p><h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><ul><li><a href="https://www.google.com/chrome/" target="_blank" rel="noopener">Chrome</a><br>毫无争议，程序员必备，偶尔因为缓存问题用一下系统自带的 Edge 浏览器</li></ul><h3 id="UWP"><a href="#UWP" class="headerlink" title="UWP"></a>UWP</h3><p>不得不说，UWP 是微软的败笔。虽然本意是想模仿苹果的 AppStore,但最后还是缺乏管理，导致垃圾应用泛滥。不过，话说回来，有几个还是不错的。</p><ul><li><p>网易云音乐<br>去除了安装版的笨重、Bug少，虽然不能后台播放，但个人认为这是 UWP 最好的应用，没有之一</p></li><li><p>有道词典<br>比安装版的好太多，直接复制翻译，还支持文章翻译</p></li><li><p>中国大学慕课<br>不喜欢看网页的人可以试试这个，还不错</p></li><li><p>邮件<br>貌似是系统自带的应用，可以收发信，但我偏爱 iOS 上的 QQ 邮箱，没有用电脑处理邮件的习惯。</p></li></ul><h3 id="杀毒"><a href="#杀毒" class="headerlink" title="杀毒"></a>杀毒</h3><p>微软自家的 Windows Defender 已无力吐槽，还是因为是上文提到的 <a href="#UWP">UWP</a> 应用，不稳定极了！装一些破解的时候，明明显示关掉的还是会报毒，加白名单的也报毒···</p><p>由于它前身之前用的 Win7 的 MSE 软件，一开始本人对它好感爆棚，逢人推荐。现在因为 UWP 应用的经常抽风，已经换成<a href="https://www.huorong.cn/" target="_blank" rel="noopener">火绒</a>了</p><h3 id="播放器"><a href="#播放器" class="headerlink" title="播放器"></a>播放器</h3><ul><li><p>PotPlayer<br>解码编码什么的很烦，PotPlayer 一个搞定全部<br>设置在这，reg 直接导入即可</p></li><li><p>迅雷看看<br>这是绿色安装版，方便迅雷边下边看（虽然破解版的迅雷边看边下的播放器可以自己设置）</p></li></ul><h3 id="压缩管理"><a href="#压缩管理" class="headerlink" title="压缩管理"></a>压缩管理</h3><ul><li><p>推荐 <a href="https://www.7-zip.org/7z.html" target="_blank" rel="noopener">7zip</a>，开源免费</p></li><li><p>我用的 WinRAR，要破解原因是习惯了，下次想尝试使用 7zip</p></li></ul><h3 id="美化工具"><a href="#美化工具" class="headerlink" title="美化工具"></a>美化工具</h3><p><img src="https://yiyun-1253940215.cos.ap-shanghai.myqcloud.com/草图.png" alt=""></p><p>大概是这样子，可能打码有点影响美观…</p><h4 id="软煤雷达"><a href="#软煤雷达" class="headerlink" title="软煤雷达"></a>软煤雷达</h4><p>有点流氓的软件，但是仔细使用并不影响，而且有绿色版</p><h4 id="Fence"><a href="#Fence" class="headerlink" title="Fence"></a>Fence</h4><p>桌面图标管理软件，配合 <a href="#Rolan">Rolan</a> 使用效果极佳</p><h4 id="Rolan"><a href="#Rolan" class="headerlink" title="Rolan"></a><a href="https://getrolan.com/" target="_blank" rel="noopener">Rolan</a></h4><p>桌面图标管理神器，订阅制。但免费足够了，我发现这个后，再也离不开它，配合 Fence 效果极佳</p><h4 id="StartIsBack"><a href="#StartIsBack" class="headerlink" title="StartIsBack"></a>StartIsBack</h4><p>任务栏透明，<del>我用的Startisback 破解版。但据说此软件不适用于最新的win10创意者更新版，会引起很多问题（有一次大版本更新就是因为这个报错了，卸了就好了）推荐下一款</del><br>替代品：<a href="https://github.com/TranslucentTB/TranslucentTB/releases" target="_blank" rel="noopener">TranslucentTB</a></p><h3 id="实用工具"><a href="#实用工具" class="headerlink" title="实用工具"></a>实用工具</h3><h4 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a><a href="https://www.voidtools.com/downloads/" target="_blank" rel="noopener">Everything</a></h4><p>本地搜索软件，好用到爆炸</p><h4 id="SumatraPDF"><a href="#SumatraPDF" class="headerlink" title="SumatraPDF"></a><a href="https://www.sumatrapdfreader.org/download.html" target="_blank" rel="noopener">SumatraPDF</a></h4><p>你也可以使用浏览器看，个人喜欢这个轻便简洁的 PDF 阅读器</p><h4 id="Prezi"><a href="#Prezi" class="headerlink" title="Prezi"></a>Prezi</h4><p>演示用的工具，说实话第一次见到它的时候惊艳到我了，相当于 Mac 下的 Keynote，同类的还有万彩的办公大师</p><p><a href="https://prezi.com/" target="_blank" rel="noopener">演示</a></p><h4 id="Picasa"><a href="#Picasa" class="headerlink" title="Picasa"></a><a href="https://picasa.en.softonic.com/?ex=BB-527.1" target="_blank" rel="noopener">Picasa</a></h4><p>没记错的话应该是谷歌的看图软件，Win10 的照片查看器实在太垃圾！</p><h4 id="TIM"><a href="#TIM" class="headerlink" title="TIM"></a><a href="https://tim.qq.com/download.html" target="_blank" rel="noopener">TIM</a></h4><p>绿色版 QQ，虽然也开始臃肿了···</p><h4 id="WeChat"><a href="#WeChat" class="headerlink" title="WeChat"></a><a href="https://pc.weixin.qq.com/" target="_blank" rel="noopener">WeChat</a></h4><p>这个总不用介绍了吧···</p><h4 id="calibre"><a href="#calibre" class="headerlink" title="calibre"></a><a href="https://calibre-ebook.com/download" target="_blank" rel="noopener">calibre</a></h4><p>电子书管理软件，我记得也是全平台吧，貌似还是开源的，很不错,可惜没有在线同步功能，而且我对它需求不大</p><h4 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a><a href="https://typora.io/" target="_blank" rel="noopener">Typora</a></h4><p>MarkDown 写作的神器，全平台可以使用，不用介绍，用过的人都说它好用</p><h4 id="XMind"><a href="#XMind" class="headerlink" title="XMind"></a>XMind</h4><p>很好用的脑图工具，就是不知道放出破解版以后，思杰马克丁会不会给我发律师函…</p><p>不想用破解版的朋友可以考虑一下<a href="#">百度脑图</a>的开源版，全平台的也很不错，就是还有些 Bug</p><h4 id="OneDrive"><a href="#OneDrive" class="headerlink" title="OneDrive"></a>OneDrive</h4><p>巨硬自家的东西，随着 Win10 的迭代，他也变得好用了起来。<br><del>什么跟百度网盘比？百度网盘垃圾东西我早就不用了</del>（百度网盘真好用+_+认真脸）<br>PS：OneDrive 学生凭教育邮箱享受 1024GB 的空间哟</p><h4 id="Internet-Download-Manager"><a href="#Internet-Download-Manager" class="headerlink" title="Internet Download Manager"></a>Internet Download Manager</h4><p>俗称 IDM，我的主力下载软件，好用到爆炸</p><ul><li>百度网盘不是下载速度慢么？用油猴抓取真实链接，直接用这玩意下就好了</li><li>谷歌浏览器和 Edge 都有 IDM 插件支持，所以除了种子都可以下载</li><li>网页上的视频啊音频啊智能抓取也可以下载</li></ul><h4 id="金山电脑清理"><a href="#金山电脑清理" class="headerlink" title="金山电脑清理"></a>金山电脑清理</h4><p>某大佬的绿色提取版，个人喜好</p><h4 id="Ditto"><a href="#Ditto" class="headerlink" title="Ditto"></a><a href="https://ditto-cp.sourceforge.io/" target="_blank" rel="noopener">Ditto</a></h4><p>以前用的 ClipX，重装后换成了这货，体验还行<br>使用见<a href="https://sspai.com/post/43700" target="_blank" rel="noopener">这里</a></p><h4 id="VirtualBox"><a href="#VirtualBox" class="headerlink" title="VirtualBox"></a><a href="https://www.virtualbox.org/" target="_blank" rel="noopener">VirtualBox</a></h4><p>比 VMware 那妖艳贱货好用那么一丢丢，主要是免费不用破解，占用资源还小，Linux 下也有</p><p>不过现在的我不怎么需要了（傲娇脸）</p><h4 id="TeamViewer"><a href="#TeamViewer" class="headerlink" title="TeamViewer"></a><a href="https://www.teamviewer.us/downloads/" target="_blank" rel="noopener">TeamViewer</a></h4><p>QQ 那个远程桌面太鸡肋了，会卡，传输和帧率体验极差</p><p>既然要给妹子修电脑，好一点的远程桌面软件是你需要的（滑稽</p><h4 id="有道云笔记"><a href="#有道云笔记" class="headerlink" title="有道云笔记"></a><a href="https://note.youdao.com/" target="_blank" rel="noopener">有道云笔记</a></h4><p>记笔记的，签到获取容量</p><h3 id="艺术处理"><a href="#艺术处理" class="headerlink" title="艺术处理"></a>艺术处理</h3><p>曾经一口气装了会声会影、爱剪辑、Vegas、AE、PR、PS、AI 等软件，后来发现只学会了 PR 和 PS</p><h4 id="Adobe"><a href="#Adobe" class="headerlink" title="Adobe"></a>Adobe</h4><p>这里就不介绍了可以在 U盘 上直接运行，直接甩<a href="https://pan.baidu.com/s/18Q5ulT59ro70XK_V6mM8Jw" target="_blank" rel="noopener">提取码 8m36</a></p><h4 id="格式工厂"><a href="#格式工厂" class="headerlink" title="格式工厂"></a><a href="http://www.pcgeshi.com/" target="_blank" rel="noopener">格式工厂</a></h4><p>转化音频的软件，安装需要小心勾选流氓软件</p><h3 id="编程代码"><a href="#编程代码" class="headerlink" title="编程代码"></a>编程代码</h3><p>个人的编程环境搭建</p><h4 id="Git"><a href="#Git" class="headerlink" title="Git"></a><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a></h4><p>不需要解释吧代码管理工具</p><h4 id="Node-JS"><a href="#Node-JS" class="headerlink" title="Node.JS"></a><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.JS</a></h4><ul><li>Hexo<br>顺便把博客环境搭了</li></ul><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h4><p><a href="https://www.java.com/download/" target="_blank" rel="noopener">Java</a> 环境肯定要有···</p><h4 id="Intellij-IDEA"><a href="#Intellij-IDEA" class="headerlink" title="Intellij IDEA"></a><a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">Intellij IDEA</a></h4><p>学生党就不破解了···教程在<a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial" target="_blank" rel="noopener">此</a></p><h4 id="Eclipse"><a href="#Eclipse" class="headerlink" title="Eclipse"></a><a href="http://www.eclipse.org/downloads/packages/release/kepler/sr1/eclipse-ide-java-developers" target="_blank" rel="noopener">Eclipse</a></h4><p>不是很想装···</p><h4 id="Android-Studio"><a href="#Android-Studio" class="headerlink" title="Android Studio"></a>Android Studio</h4><p>安装见<a href="https://yi-yun.github.io/Android-Studio-%E5%AE%89%E8%A3%85/">这篇文章</a></p><h4 id="Dev-C"><a href="#Dev-C" class="headerlink" title="Dev-C++"></a><a href="https://sourceforge.net/projects/orwelldevcpp/" target="_blank" rel="noopener">Dev-C++</a></h4><p>写 C 和 C++ 的 IDE,逢问必推荐这款</p><p>什么？VC6.0++？拜托这都 8012 年了，还用远古工具</p><p>什么？Visual Studio？算了太大···不适合新手</p><p>相信我入门 C语言 选这款，你不会后悔的这玩意好久没用了，要不是今天写文章还想不起来</p><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a><a href="https://www.python.org/downloads/" target="_blank" rel="noopener">Python</a></h4><p>这个肯定要装.jpg，别手贱去装 Anaconda 这玩意</p><h4 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a><a href="https://code.visualstudio.com/download" target="_blank" rel="noopener">Visual Studio Code</a></h4><p>写项目文件好用到爆炸，还有丰富的插件</p><h4 id="Notepad"><a href="#Notepad" class="headerlink" title="Notepad++"></a><a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener">Notepad++</a></h4><p>不想用自带的文本编辑器，相比楼上那个 Visual Studio Code，这东西启动快</p><h3 id="开源工具"><a href="#开源工具" class="headerlink" title="开源工具"></a>开源工具</h3><h4 id="数字权利激活"><a href="#数字权利激活" class="headerlink" title="数字权利激活"></a><a href="https://github.com/TGSAN/CMWTAT_Digital_Edition" target="_blank" rel="noopener">数字权利激活</a></h4><p><a href="#激活">上文</a>提到过</p><h4 id="录屏工具"><a href="#录屏工具" class="headerlink" title="录屏工具"></a><a href="https://github.com/NickeManarin/ScreenToGif" target="_blank" rel="noopener">录屏工具</a></h4><h4 id="离线文档浏览"><a href="#离线文档浏览" class="headerlink" title="离线文档浏览"></a><a href="https://github.com/zealdocs/zeal" target="_blank" rel="noopener">离线文档浏览</a></h4><h4 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a><a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a></h4><p>极好用的图床工具，羡慕会 Electron 的大佬</p><h4 id="Putty"><a href="#Putty" class="headerlink" title="Putty"></a><a href="https://www.putty.org/" target="_blank" rel="noopener">Putty</a></h4><p>SSH 登录</p><h4 id="WinSCP"><a href="#WinSCP" class="headerlink" title="WinSCP"></a><a href="https://winscp.net/eng/download.php" target="_blank" rel="noopener">WinSCP</a></h4><p>Windows 与 Linux 之间互传文件</p><h4 id="proxyee-down"><a href="#proxyee-down" class="headerlink" title="proxyee-down"></a><a href="https://github.com/proxyee-down-org/proxyee-down" target="_blank" rel="noopener">proxyee-down</a></h4><p>百度网盘下载</p><h4 id="rufus"><a href="#rufus" class="headerlink" title="rufus"></a><a href="https://rufus.akeo.ie/" target="_blank" rel="noopener">rufus</a></h4><p>U 盘刻录工具，装 Linux 系统会用到</p><h4 id="佛曰不可说"><a href="#佛曰不可说" class="headerlink" title="佛曰不可说"></a><a href="https://github.com/iMeiji/shadowsocks_install/wiki/shadowsocks-libev-%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85" target="_blank" rel="noopener">佛曰不可说</a></h4><h2 id="下载地址（点此下载）"><a href="#下载地址（点此下载）" class="headerlink" title="下载地址（点此下载）"></a><a href="https://caomsacid0-my.sharepoint.com/:f:/g/personal/yi-yun_caoms_ac_id/EqIjMtarICtHmVzGmrezX4wBGx5L1OWlpfsmzmBa31YgqQ?e=7h0s2T" target="_blank" rel="noopener">下载地址</a>（点此下载）</h2>]]></content>
    
    <summary type="html">
    
      &lt;p align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://yiyun-1253940215.cos.ap-shanghai.myqcloud.com/background-720224__340.jpg&quot; class=&quot;full-image&quot;&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;重装系统过的朋友肯定很头疼要安装哪些软件？很多都是之前网上找的，并没有保存安装包，导致后续有很多麻烦。&lt;/p&gt;
&lt;p&gt;本篇文章主要为了解决这个问题，当然里面的软件也只是符合博主的个人口味，按需获取。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;系统兼容性说明：博主大概率以后重装 win10 1803 专业版起步，有些软件兼容性不是很好，请自行在属性兼容性进行测试！&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="win 配置" scheme="https://yi-yun.github.io/categories/win-%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="奇淫怪技" scheme="https://yi-yun.github.io/tags/%E5%A5%87%E6%B7%AB%E6%80%AA%E6%8A%80/"/>
    
      <category term="配置笔记" scheme="https://yi-yun.github.io/tags/%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/"/>
    
      <category term="软件" scheme="https://yi-yun.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="Windows" scheme="https://yi-yun.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>爬坑指南（二）</title>
    <link href="https://yi-yun.github.io/%E5%9F%BA%E4%BA%8E%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%9B%B4%E6%96%B0%E7%89%88/"/>
    <id>https://yi-yun.github.io/基于树莓派的微信机器人更新版/</id>
    <published>2018-09-26T09:49:24.000Z</published>
    <updated>2018-09-26T09:55:05.579Z</updated>
    
    <content type="html"><![CDATA[<p align="center"><br>  <img src="https://i.loli.net/2018/07/22/5b542f5c58d76.jpg" alt="IMG_5686.jpg" title="IMG_5686.jpg" width="250"><br></p><p>对该项目不了解的朋友可先阅读<a href="https://yi-yun.github.io/%E7%88%AC%E5%9D%91%E6%8C%87%E5%8D%97/">爬坑指南（一）</a></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>因为系统开发与设计需要提交个人作业，但说来惭愧，手头上没有拿的出来的作品，只能将树莓派机器人交上去。</p><p>不看还好，一看吓一跳，图灵 API 失效，点歌功能失效，我还把物联网的器件交给了老师···看样子要更新代码不是一件很容易的事啊。事实证明，果然如此，这次相当于我基于原来的框架又重新写了一遍<br><a id="more"></a></p><h2 id="更新说明"><a href="#更新说明" class="headerlink" title="更新说明"></a>更新说明</h2><h3 id="图灵机器人-V2-0"><a href="#图灵机器人-V2-0" class="headerlink" title="图灵机器人 V2.0"></a><a href="https://www.kancloud.cn/turing/www-tuling123-com/718227" target="_blank" rel="noopener">图灵机器人 V2.0</a></h3><p>这里是个大坑，让我头疼了很久，在这耗费了大量时间</p><ul><li><p>坑一：格式<br>更新后的图灵机器人在命令行中要采用 <code>POST</code> 方式， <code>JSON</code> 的参数这样的形式才生效<br><img src="https://yiyun-1253940215.cos.ap-shanghai.myqcloud.com/20180926124330.png" alt=""><br>这么复杂的东西，不复制到代码里然后修改很容易出错</p></li><li><p>坑二：返回参数<br>看下面这段代码，不经过测试，鬼知道怎么读取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">       res = requests.post(url=apiUrl, data=json.dumps(data))</span><br><span class="line">       b = res.json()</span><br><span class="line">       print(b)</span><br><span class="line">       <span class="keyword">return</span> b[<span class="string">'results'</span>][<span class="number">0</span>][<span class="string">'values'</span>][b[<span class="string">'results'</span>][<span class="number">0</span>][<span class="string">'resultType'</span>]]       </span><br><span class="line">   <span class="keyword">except</span> Exception:</span><br><span class="line">       <span class="keyword">return</span> <span class="string">"我无法理解【%s】的含义"</span> % msg</span><br></pre></td></tr></table></figure></li><li><p>坑三：原来的机器人不能用<br>官网没有任何提示（可能有，反正我没看到）我一直再用老版本机器人，提示加密方式错误，提交反馈也没人理我，网站还用的 <code>http</code>。<br>一开始我以为是实名认证的锅，提交了身份认证，足足让我等了两个礼拜才通过？！通过后仍然报错，摸索了很久，试了很多方法，一气之下新建机器人才算搞定<br><strong>总之，用图灵机器人 <code>V2.0</code> 的 <code>API</code> 一定要新建机器人</strong></p></li></ul><h3 id="点歌播放"><a href="#点歌播放" class="headerlink" title="点歌播放"></a>点歌播放</h3><p>也就三个月，小豆机器人的点歌 API 失效了.无奈只好重新寻找，皇天不负有心人，<del>在经过一日一夜的寻找</del>，在某网站发现了老版网易云的根据歌名得到 <code>ID</code> 的链接，得到 <code>ID</code> 就可以拼接链接，用 <code>mplayer</code> 播放</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_musicurl</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = <span class="string">'http://s.music.163.com/search/get/?src=lofter&amp;type=1&amp;filterDj=true&amp;s='</span>+text+<span class="string">'&amp;limit=2&amp;offset=0&amp;callback=loft.w.g.cbFuncSearchMusic'</span></span><br><span class="line">        res = requests.get(url)</span><br><span class="line">        j = json.loads(res.text[<span class="number">27</span>:<span class="number">-1</span>])</span><br><span class="line">        id = j[<span class="string">'result'</span>][<span class="string">'songs'</span>][<span class="number">0</span>][<span class="string">'id'</span>]</span><br><span class="line">        _url = <span class="string">'http://music.163.com/song/media/outer/url?id='</span>+str(id)+<span class="string">'.mp3'</span></span><br><span class="line">        <span class="keyword">return</span> _url</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我找不到歌名【%s】"</span> % text</span><br></pre></td></tr></table></figure><h3 id="图床功能"><a href="#图床功能" class="headerlink" title="图床功能"></a>图床功能</h3><p>博客嘛，图床是不可避免的。但是 iOS 只有 SM.MS，没有腾讯云的对象存储。有了需求，加上官网上的<a href="https://cloud.tencent.com/document/product/436" target="_blank" rel="noopener">文档</a>，功能就出来了。不过环境需要在本地配置。当然也可以将相关的密钥参数用模块的形式导入</p><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><p>去除了原先冗杂的抛异常代码以及小豆机器人失效的功能，使功能更加健全</p><p>例如可以输入 <code>明天杭州到武汉的火车</code> 查询相关信息</p><h2 id="项目总结"><a href="#项目总结" class="headerlink" title="项目总结"></a>项目总结</h2><p><a href="https://github.com/yi-yun/raspi-chatrobot" target="_blank" rel="noopener">项目地址</a>(将原有的分支改为主分支，<code>master</code> 变为副分支)</p><p>其实正确的做法应该在原来的基础上新建分支然后合并，而不是在本地上更改完以后提交代码，有所欠缺。</p>]]></content>
    
    <summary type="html">
    
      &lt;p align=&quot;center&quot;&gt;&lt;br&gt;  &lt;img src=&quot;https://i.loli.net/2018/07/22/5b542f5c58d76.jpg&quot; alt=&quot;IMG_5686.jpg&quot; title=&quot;IMG_5686.jpg&quot; width=&quot;250&quot;&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;对该项目不了解的朋友可先阅读&lt;a href=&quot;https://yi-yun.github.io/%E7%88%AC%E5%9D%91%E6%8C%87%E5%8D%97/&quot;&gt;爬坑指南（一）&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;因为系统开发与设计需要提交个人作业，但说来惭愧，手头上没有拿的出来的作品，只能将树莓派机器人交上去。&lt;/p&gt;
&lt;p&gt;不看还好，一看吓一跳，图灵 API 失效，点歌功能失效，我还把物联网的器件交给了老师···看样子要更新代码不是一件很容易的事啊。事实证明，果然如此，这次相当于我基于原来的框架又重新写了一遍&lt;br&gt;
    
    </summary>
    
      <category term="树莓派" scheme="https://yi-yun.github.io/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派" scheme="https://yi-yun.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
      <category term="聊天机器人" scheme="https://yi-yun.github.io/tags/%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
      <category term="微信" scheme="https://yi-yun.github.io/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio 安装</title>
    <link href="https://yi-yun.github.io/Android-Studio-%E5%AE%89%E8%A3%85/"/>
    <id>https://yi-yun.github.io/Android-Studio-安装/</id>
    <published>2018-08-18T02:47:28.000Z</published>
    <updated>2018-09-17T01:25:59.929Z</updated>
    
    <content type="html"><![CDATA[<p align="center"><br>  <img src="https://i.loli.net/2018/08/15/5b73a619714be.jpg" alt="IMG_5686.jpg" title="IMG_5686.jpg" class="full-image" width="650/"><br></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前重新安装了双系统，装完怎么能没有 Android Studio 这个神器呢？<br>但博主是个强迫症的人，一般软件不喜欢安装在 C 盘，最主要的原因是 C 盘空间初始分的太小，加上 Windows 的尿性，天天更新之类少空间就很头疼，所以应该尽可能减少占用 C 盘的空间。</p><a id="more"></a><h2 id="配置-Java-环境"><a href="#配置-Java-环境" class="headerlink" title="配置 Java 环境"></a>配置 Java 环境</h2><p>这里我装的是 Java 8 的环境，配置环境对于老手来说手到擒来。<del>我不会告诉你们我配的时候去网上看了遍教程……</del></p><h2 id="下载-Android-Studio"><a href="#下载-Android-Studio" class="headerlink" title="下载 Android Studio"></a>下载 Android Studio</h2><p>很多人推荐去<a href="https://developer.android.com/studio/" target="_blank" rel="noopener">官网</a>下，这是最新的（可能有老版的，但我没找到），但 3.1 以上的版本我记得没有 Android Monitor，而且可能访问速度不够快，最好有个梯子，个人不是很推荐</p><p>我是去<a href="http://www.androiddevtools.cn/" target="_blank" rel="noopener">这里</a>下的，点开页面惊不惊喜？竟然是中文的！你也可以直接在此页面点<a href="https://dl.google.com/dl/android/studio/install/3.0.1.0/android-studio-ide-171.4443003-windows.exe?utm_source=androiddevtools&amp;utm_medium=website" target="_blank" rel="noopener">链接</a>下载 Android Studio 3.0.1.exe 安装程序</p><h2 id="安装-Android-Studio"><a href="#安装-Android-Studio" class="headerlink" title="安装 Android Studio"></a>安装 Android Studio</h2><p>更改安装路径，一路 next 即可</p><h3 id="配置-Android-Studio（重要）"><a href="#配置-Android-Studio（重要）" class="headerlink" title="配置 Android Studio（重要）"></a>配置 Android Studio（重要）</h3><h3 id="选择-Custom"><a href="#选择-Custom" class="headerlink" title="选择 Custom"></a>选择 Custom</h3><p>选择 Standard 模式可能更改不了路径</p><h3 id="取消勾选-Android-Virtual-Device"><a href="#取消勾选-Android-Virtual-Device" class="headerlink" title="取消勾选 Android Virtual Device"></a>取消勾选 Android Virtual Device</h3><p>顾名思义安卓虚拟机，调试用的个人不喜欢安装这玩意，原因有很多：</p><ul><li>占用空间只能装在 C 盘的</li><li>我有淘汰的 Android 手机</li><li>没有域名映射，调试的时候有点问题</li><li>实在不行，可以用夜神模拟器代替</li></ul><p>总之，我就算是死也不会装的！<del>真香</del></p><h3 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h3><p>主要移动的是用户目录下的以下文件<img src="https://i.loli.net/2018/08/18/5b77837e050c8.png" alt="文件目录"></p><h4 id="更改-gradle-目录"><a href="#更改-gradle-目录" class="headerlink" title="更改 gradle 目录"></a>更改 gradle 目录</h4><p>打开 AS 的 setting，进行相关设置</p><p><img src="https://i.loli.net/2018/08/18/5b7784e690ba4.png" alt=""></p><h4 id="更改-Android-Studio-配置相关目录"><a href="#更改-Android-Studio-配置相关目录" class="headerlink" title="更改 Android Studio 配置相关目录"></a>更改 Android Studio 配置相关目录</h4><p>进入 Android Studio 安装位置，比如我安装在了<code>D:\Android Studio</code>，找到<code>D:\Android Studio\bin\idea.properties</code></p><p>更改配置文件，将两个路径更改为自己喜欢的路径，如图</p><p><img src="https://i.loli.net/2018/08/18/5b77866f6a904.png" alt=""></p><p>更改完保存重启即可</p>]]></content>
    
    <summary type="html">
    
      &lt;p align=&quot;center&quot;&gt;&lt;br&gt;  &lt;img src=&quot;https://i.loli.net/2018/08/15/5b73a619714be.jpg&quot; alt=&quot;IMG_5686.jpg&quot; title=&quot;IMG_5686.jpg&quot; class=&quot;full-image&quot; width=&quot;650/&quot;&gt;&lt;br&gt;&lt;/p&gt;


&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前重新安装了双系统，装完怎么能没有 Android Studio 这个神器呢？&lt;br&gt;但博主是个强迫症的人，一般软件不喜欢安装在 C 盘，最主要的原因是 C 盘空间初始分的太小，加上 Windows 的尿性，天天更新之类少空间就很头疼，所以应该尽可能减少占用 C 盘的空间。&lt;/p&gt;
    
    </summary>
    
      <category term="win 配置" scheme="https://yi-yun.github.io/categories/win-%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="Android Studio 安装配置" scheme="https://yi-yun.github.io/tags/Android-Studio-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    
      <category term="笔记" scheme="https://yi-yun.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>爬坑指南（一）</title>
    <link href="https://yi-yun.github.io/%E7%88%AC%E5%9D%91%E6%8C%87%E5%8D%97/"/>
    <id>https://yi-yun.github.io/爬坑指南/</id>
    <published>2018-07-30T07:24:53.000Z</published>
    <updated>2018-09-26T09:48:25.192Z</updated>
    
    <content type="html"><![CDATA[<p align="center"><br>  <img src="https://i.loli.net/2018/07/22/5b542f5c58d76.jpg" alt="IMG_5686.jpg" title="IMG_5686.jpg" width="250"><br></p><p>在大一计算机导论课的时候，老师演示了用 APP 控制 LED 灯的系统，当时觉得很极客。脑海中就幻想，在九点下班的路上，在微信对话框内输入<code>打开空调</code>，回到家后就能享受迎面而来的凉风……而这一切都是你自己搭建的，那是多么美妙的事情！</p><h3 id="相关背景"><a href="#相关背景" class="headerlink" title="相关背景"></a>相关背景</h3><p>很早之前，学长送了我一个树莓派作为社团留任礼物。一直想愉快地玩耍，却迟迟不得空。 2018 年寒假终于感受到了嵌入式的魅力。有了寒假折腾的基础（折腾过程可能后续会写到博客），到了嵌入式系统开发的课程，<del>为了大作业</del>（其实还是自己想折腾）做了一个基于树莓派的微信机器人。<br><a id="more"></a></p><h3 id="具体实施"><a href="#具体实施" class="headerlink" title="具体实施"></a>具体实施</h3><p>跟着脑海中的思路先画了思维导图<br><img src="https://i.loli.net/2018/07/22/5b5469d3cce66.png" alt=""></p><ul><li><p><strong>模块采用</strong><br>查阅资料后，了解到微信机器人 python 模块流行的有两种：itchat 和 wxpy。初步比较后采用 itchat，原因是wxpy是在itchat上改的。从某种意义上来说，itchat 更原始一点。<br><a href="http://itchat.readthedocs.io/zh/latest/" target="_blank" rel="noopener">itchat 官方文档</a><br>例：</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@itchat.msg_register(TEXT)  #处理对话框内的消息先根据消息类型进行注册</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_reply</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> Chat.has_music(msg[<span class="string">'Text'</span>]</span><br></pre></td></tr></table></figure></li><li><p><strong>自动回复</strong><br>回复对话需要相应的 API 支持，最常见的是图灵机器人（<del>个人觉得是名字取得好才常见</del>）。本项目用到的还有小豆机器人的 API 。<br>国外还有被谷歌收购的 api.ai ，基于机器学习，有时间的话可以研究一下。<br>例：小豆机器人注册账号得到相应的 Key 后可在浏览器打开<a href="http://api.douqq.com/?key=Rzd5bW49Mj0vZ09hbmh0MEJ1VENReGdWd2hZQUFBPT0&amp;msg=什么是物联网" target="_blank" rel="noopener">链接</a>（这里用的是我的 key）<br>同理图灵机器人也会有相应的 Key，以<code>res = requests.post(apiUrl, data=data).json()</code>的代码方式（需要以 json 格式）请求数据，然后得到结果<code>title = res.get(&#39;text&#39;)</code></p></li><li><p><strong>控制 LED</strong><br>对于了解过树莓派 GPIO 的人来说很简单。</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO  <span class="comment">#引入模块</span></span><br><span class="line">pin=<span class="number">17</span>  <span class="comment">#设置引脚</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)  <span class="comment">#设置BCM模式</span></span><br><span class="line">GPIO.setup(pin,GPIO.OUT)  <span class="comment">#初始化</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on</span><span class="params">()</span>:</span></span><br><span class="line">    GPIO.output(pin,<span class="keyword">True</span>)   <span class="comment">#高电平开</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">off</span><span class="params">()</span>:</span></span><br><span class="line">    GPIO.output(pin,<span class="keyword">False</span>)   <span class="comment">#低电平关</span></span><br></pre></td></tr></table></figure></li><li><p><strong>天气爬取</strong><br>室外天气爬取的是墨迹天气，参考的是<a href="https://zhuanlan.zhihu.com/p/24983204" target="_blank" rel="noopener">树莓派语音闹钟</a><br>这里用到的<a href="http://tts.baidu.com/text2audio?idx=1&amp;tex=%E5%9F%BA%E4%BA%8E%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA&amp;cuid=baidu_speech_demo&amp;cod=2&amp;lan=zh&amp;ctp=1&amp;pdt=1&amp;spd=5&amp;per=4&amp;vol=5&amp;pit=5" target="_blank" rel="noopener">百度 API </a>很有意思，关于语音类的以后可能还会用到<br>因为还有 DHT11 模块获取室内温湿度，所以在原来基础的代码上又加了一些代码</p></li><li><strong>点歌播放</strong><br>  首先要有音乐播放器<code>sudo apt-get install mplayer</code>，这里用到的是 mplayer，后面直接跟链接就能播放<br>  有了播放器后，接下来是音乐链接了。这里是最苦恼我的地方。几个月前在网上找了很多教程。Linux 相关的最出名的就是网易云音乐了。所以先找的是网易云音乐，什么 Node.js 版，CLI 下的等等，有的功能太全需要登陆，有的不符合要求······总之，均不满意。<br>  后来无意中浏览小豆机器人功能列表时发现了这货竟然提供点歌播放，迅速输入连接获取的是一串文字，用正则表达式匹配后，竟然成功点歌播放了。只是因为采用的是 HTTP 协议，歌名不能有空格。<del>大作业演示的时候不输空格就好了，总比没有好</del><br>  有了链接后，还需多线程停止播放，不然你得听完整首歌才能开灯，太 Low 了！<br>  代码如下:  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">has_music</span><span class="params">(text)</span>:</span></span><br><span class="line">thre=threading.Thread();</span><br><span class="line"><span class="keyword">if</span> text[<span class="number">0</span>].__eq__(<span class="string">"点"</span>) <span class="keyword">and</span> text[<span class="number">1</span>].__eq__(<span class="string">"歌"</span>):</span><br><span class="line">    reply = Tuling.get_response(text)</span><br><span class="line">    pattern=re.compile(<span class="string">r'http://zhangmenshiting.*'</span>)</span><br><span class="line">    url=re.findall(pattern,reply)</span><br><span class="line">    url=url[<span class="number">0</span>][<span class="number">0</span>:<span class="number">-1</span>]</span><br><span class="line">    thre=threading.Thread(target=play,args=[url])</span><br><span class="line">    thre.start()</span><br><span class="line"><span class="keyword">elif</span> text.__contains__(<span class="string">"停止"</span>):</span><br><span class="line">    os.system(<span class="string">'killall -9 mplayer'</span> )</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">return</span> deng(text)</span><br></pre></td></tr></table></figure></li></ul><h3 id="项目总结"><a href="#项目总结" class="headerlink" title="项目总结"></a>项目总结</h3><p><a href="https://github.com/yi-yun/raspi-chatrobot" target="_blank" rel="noopener">项目地址</a><br>可能因为第一次做项目的关系，略显得有点稚嫩。不仅体现在代码上，还在工作流上有问题。后来静下心来，用思维导图重新梳理了思路，打了草稿，一切都迎刃而解。<br>欢迎各位看官提出各种见解和建议！</p>]]></content>
    
    <summary type="html">
    
      &lt;p align=&quot;center&quot;&gt;&lt;br&gt;  &lt;img src=&quot;https://i.loli.net/2018/07/22/5b542f5c58d76.jpg&quot; alt=&quot;IMG_5686.jpg&quot; title=&quot;IMG_5686.jpg&quot; width=&quot;250&quot;&gt;&lt;br&gt;&lt;/p&gt;



&lt;p&gt;在大一计算机导论课的时候，老师演示了用 APP 控制 LED 灯的系统，当时觉得很极客。脑海中就幻想，在九点下班的路上，在微信对话框内输入&lt;code&gt;打开空调&lt;/code&gt;，回到家后就能享受迎面而来的凉风……而这一切都是你自己搭建的，那是多么美妙的事情！&lt;/p&gt;
&lt;h3 id=&quot;相关背景&quot;&gt;&lt;a href=&quot;#相关背景&quot; class=&quot;headerlink&quot; title=&quot;相关背景&quot;&gt;&lt;/a&gt;相关背景&lt;/h3&gt;&lt;p&gt;很早之前，学长送了我一个树莓派作为社团留任礼物。一直想愉快地玩耍，却迟迟不得空。 2018 年寒假终于感受到了嵌入式的魅力。有了寒假折腾的基础（折腾过程可能后续会写到博客），到了嵌入式系统开发的课程，&lt;del&gt;为了大作业&lt;/del&gt;（其实还是自己想折腾）做了一个基于树莓派的微信机器人。&lt;br&gt;
    
    </summary>
    
      <category term="树莓派" scheme="https://yi-yun.github.io/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派" scheme="https://yi-yun.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
      <category term="聊天机器人" scheme="https://yi-yun.github.io/tags/%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>陌上花开</title>
    <link href="https://yi-yun.github.io/%E5%8D%9A%E5%AE%A2%E5%B0%8F%E8%AE%B0/"/>
    <id>https://yi-yun.github.io/博客小记/</id>
    <published>2018-07-24T02:34:54.000Z</published>
    <updated>2018-07-24T02:46:20.677Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/07/22/5b543ab189014.png" class="full-image"></p><hr><blockquote><p>陌上花开，可缓缓归矣。</p></blockquote><p>第一次知道这句话是在初二，是一位好友的 QQ 昵称。转眼六载有余，当时可曾想这句话会成为我人生中第一个博客的开篇句。<br><a id="more"></a><br>这句话的意思大致是夫君想念妻子，希望妻子早点从娘家回来，但显然我并没有那么煽情。博客引用这句话意在自勉，希望不再自甘堕落，找回自我。</p><p>最近浏览大佬博客，看到了“人为什么活着”。这个问题每个人的每个阶段有不同的理解。现在的我为了学习，学好了为了什么？为了能找工作？找到工作为了什么？为了人活着。</p><p>也许那个时候又会问自己人活着为了什么？我会答，为了去做自己最喜欢做的事情，也是我 GitHub 的 bio “Do Your Favorites ”，真正做到的又有几个呢？没有人会告诉你也不能告诉你死后会怎么样，无神论，有神论？谁知道呢。Enjoy now enough!</p><h3 id="博客目的"><a href="#博客目的" class="headerlink" title="博客目的"></a>博客目的</h3><ul><li>输出提升<br>一月前加入了某大佬的知识星球，真的感触颇多，每天的分享，仿佛大家都在努力奋斗，而只有自己堕落在寝室中，无所事事……终于下定决心开个博客，写点东西，总比在寝室里睡觉看视频强。</li><li>查询笔记<br>不久前，重装了 win10 系统，又重新配了各种环境，教程网上一通搜索……更折腾的是，有大神推荐我 Arch Linux，因为涉及到双系统，装了七八遍，也是官方 wiki 以及各种教程乱找，用多方版本成功体验。最后终于受不了，决定有一个适合自己的笔记博客。当然期待与各位看官的共同进步！</li></ul><h3 id="选择平台"><a href="#选择平台" class="headerlink" title="选择平台"></a>选择平台</h3><ul><li>你为什么选这里？为什么呢？<br>因为穷…自己的博客需要云主机、域名，哦，对了还有那个恼人的备案。其实主要是云主机，学生机每个月十块钱（其实不贵），但加上 VPS 每个月三十，个人认为不是很值。虽然“免费的是最贵的”，但显然 GitHub Pages 托管的博客要排除在外。</li><li>既然你有 VPS ，为什么不搭 VPS 上呢<br><del>还是因为穷</del>…开个玩笑，VPS 主机在旧金山，Ping 延迟过高，加上不想耦合太紧（就像代码一样）。如果我关 VPS 的话，要考虑博客等，过于麻烦。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/07/22/5b543ab189014.png&quot; class=&quot;full-image&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;陌上花开，可缓缓归矣。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一次知道这句话是在初二，是一位好友的 QQ 昵称。转眼六载有余，当时可曾想这句话会成为我人生中第一个博客的开篇句。&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://yi-yun.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="导航" scheme="https://yi-yun.github.io/tags/%E5%AF%BC%E8%88%AA/"/>
    
      <category term="关于我" scheme="https://yi-yun.github.io/tags/%E5%85%B3%E4%BA%8E%E6%88%91/"/>
    
  </entry>
  
</feed>
